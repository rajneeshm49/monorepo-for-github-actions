# This will call reusable workflow file base-workflow.yml
name: Push to main branch
on:
  push:
    tags: ['**']
env:
  AWS_REGION: us-east-1
  REGISTRY: 682755029646.dkr.ecr.us-east-1.amazonaws.com
  MULESOFT_IMAGE_NAME: mulesoft-connector-app-non-prod
  FE_IMAGE_NAME: fe-app-non-prod
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
defaults:
  run:
    working-directory: .
jobs:
  base-workflow:
    uses: ./.github/workflows/base-workflow.yml
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    # needs: base-workflow
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
        # This step must be called to use your own action (the next step)

      - name: Regex matching
        uses: actions-ecosystem/action-regex-match@v2
        id: match-tag-name
        with:
          text: ${{ github.ref_name }}
          regex: 'v[0-9]+.[0-9]+.[0-9]+'

      - name: Exit if tag not matched
        if: ${{ steps.match-tag-name.outputs.match == '' }}
        run: |
          echo "Tag was not matched"
          exit 1

      - name: Install dependencies
        uses: ./.github/actions/cache-deps

      - name: Reset cache
        run: npm run reset-cache

      - name: Generate build
        run: npm run mulesoft:build

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/apps/mulesoft/

  build-push-image-to-ecr:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          # https://www.udemy.com/course/github-actions-the-complete-guide/learn/lecture/34140726#overview
          role-to-assume: arn:aws:iam::682755029646:role/ecs-access-for-github
          aws-region: ${{ env.AWS_REGION }}

      # - name: Upload to s3
      #   run: aws s3 sync ./dist s3://${{env.BUCKET_NAME}} --region ${{env.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker

      # - name: Build base image
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: '{{defaultContext}}'
      #     builder: ${{ steps.buildx.outputs.name }}
      #     file: ./docker-base-action
      #     tags: base:latest

      - name: Extract Metadata for the Docker image
        id: meta-mulesoft
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.MULESOFT_IMAGE_NAME }}
          tags: type=match,pattern=\d.\d.\d

      - name: Extract metadata for the Docker image to use as version no.
        id: meta-fe
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FE_IMAGE_NAME }}
          tags: type=match,pattern=\d.\d.\d

      - name: Mulesoft Build and Push
        uses: docker/build-push-action@v4
        with:
          context: '{{defaultContext}}'
          file: ./docker-mulesoft-action
          push: ${{
            github.event.base_ref =='refs/heads/feat/dlt-dockerfile' &&
            github.ref_type == 'tag' &&
            !startsWith(github.ref, 'refs/tags/v0.')
            }}
          tags: ${{ steps.meta-mulesoft.outputs.tags }}
          labels: ${{ steps.meta-mulesoft.outputs.labels }}

      - name: FE Build and push
        uses: docker/build-push-action@v4
        with:
          context: '{{defaultContext}}'
          file: ./docker-fe-action.yaml
          push: ${{
            github.event.base_ref =='refs/heads/feat/dlt-dockerfile' &&
            github.ref_type == 'tag' &&
            !startsWith(github.ref, 'refs/tags/v0.')
            }}
          tags: ${{ steps.meta-fe.outputs.tags }}
          labels: ${{ steps.meta-fe.outputs.labels }}

    # THE BELOW PART IAM COMMENTING AND WILL UNCOMMENT WHEN I RESOLVE THE INGRESS-NGINX ISSUE ON LOCAL
    # AND WHEN ITS DEPLOYABLE TO EKS
    # - name: Set the Kubernetes context
    #   uses: azure/k8s-set-context@v2
    #   with:
    #     method: service-account
    #     k8s-url: https://0B86B0DB08ADE6636AEC16F6EFD348C9.sk1.us-east-1.eks.amazonaws.com
    #     k8s-secret: ${{ secrets.KUBERNETES_SECRET }}

    # - name: checkout repo
    #   uses: actions/checkout@v3

    # - name: Deploy to the Kubernetes cluster
    #   uses: azure/k8s-deploy@v1
    #   with:
    #     namespace: default
    #     manifests: |
    #       k8s/server/mule-deployment.yaml
    #       k8s/server/mule-clusterip-service.yaml
    #       k8s/client/fe-clusterip-service.yaml
    #       k8s/client/fe-deployment.yaml
    #       k8s/ingress-service.yaml
    #     images: |
    #       370687047370.dkr.ecr.us-east-1.amazonaws.com/${{ env.MULESOFT_REGISTRY }}:latest

    # courtesy: https://nicwortel.nl/blog/2022/continuous-deployment-to-kubernetes-with-github-actions
    # For image tagging https://medium.com/@haridasan/build-docker-images-using-github-actions-for-nestjs-monorepo-with-the-help-of-git-tags-9f6d404c40c5
