# # Building layer
# FROM node:lts-alpine3.10  as development

# WORKDIR /app

# # Copy configuration files
# COPY tsconfig*.json ./
# COPY package*.json ./
# RUN apk add --update python make g++\
#    && rm -rf /var/cache/apk/*
# # Install dependencies from package-lock.json, see https://docs.npmjs.com/cli/v7/commands/npm-ci
# RUN npm ci

# # Copy application sources (.ts, .tsx, js)
# COPY . .

# # Build application (produces dist/ folder)
# RUN npm run fe:build

# # Runtime (production) layer
# FROM node:16-alpine as production

# WORKDIR /app

# # Copy dependencies files
# COPY package*.json ./

# # Install runtime dependecies (without dev/test dependecies)
# RUN npm ci --omit=dev

# # Copy production build
# COPY --from=development /app/dist/apps/fe ./dist/

# # Expose application port
# EXPOSE 4200

# # Start application
# CMD [ "node", "dist/main.js" ]

#stage 1
FROM node:latest as node
WORKDIR /app
COPY . .
RUN NODE_ENV=development npm i
RUN npm run fe:build
#stage 2
FROM nginx:alpine
COPY --from=node /app/dist/apps/fe /usr/share/nginx/html